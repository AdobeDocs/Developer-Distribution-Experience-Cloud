{"version":3,"file":"component---src-pages-overview-guides-plugin-id-md-9a14131ba7e1f20a4468.js","mappings":"4OAOsBA,E,wEADTC,EAAe,CAAC,EAKvBC,GAJgBF,EAIY,cAJJ,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,EAClB,GAEMG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAFDC,EAAU,EAAVA,WACGP,GAAK,YAER,OAAO,SAACI,GAAS,UAAKD,EAAiBH,EAAK,CAAEO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,mBAAiB,oBAEzB,gNACA,eACE,GAAM,kDAAgD,qDAExD,8EAA+D,cAAGC,WAAW,IACzE,KAAQ,yCAAuC,oCACN,8IAC7C,eACE,GAAM,8CAA4C,+CAEpD,oDAAqC,cAAGA,WAAW,IAC/C,KAAQ,yCAAuC,oCACN,8LAC7C,eACE,GAAM,yCAAuC,0CAE/C,0MACA,SAACV,EAAW,CAACW,MAAM,OAAOF,QAAQ,gBAAgB,qGAItD,CAEAF,EAAWK,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/overview/guides/plugin_id.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/developer-distribute/developer-distribute/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"get-a-plugin-id\"\n    }}>{`Get a Plugin ID`}</h1>\n    <p>{`Each marketplace listing should use a unique plugin ID that should match what is in your plugin package manifest file. You can get a unique plugin ID in any of the following three ways:`}</p>\n    <h2 {...{\n      \"id\": \"starting-from-the-adobe-uxp-developer-tool-udt\"\n    }}>{`Starting from the Adobe UXP Developer Tool (UDT)`}</h2>\n    <p>{`Create a plugin in UDT and click \"Distribute\". From the `}<a parentName=\"p\" {...{\n        \"href\": \"/developer-distribute/distribute/home\"\n      }}>{`Developer Distribution home page`}</a>{`, create a new listing and simply copy the unique plugin ID generated, then insert that plugin ID into your plugin package manifest file.`}</p>\n    <h2 {...{\n      \"id\": \"starting-from-adobe-developer-distribution\"\n    }}>{`Starting from Adobe Developer Distribution`}</h2>\n    <p>{`Create a new listing from the `}<a parentName=\"p\" {...{\n        \"href\": \"/developer-distribute/distribute/home\"\n      }}>{`Developer Distribution home page`}</a>{` and download a starter package from the \"Listing Overview\" page, which will automatically contain the new plugin ID. Add the plugin executable to the starter package and upload plugin.`}</p>\n    <h2 {...{\n      \"id\": \"starting-from-adobe-developer-console\"\n    }}>{`Starting from Adobe Developer Console`}</h2>\n    <p>{`Add a plugin to a project in Developer Console, download a starter package. Click on \"Distribute\" and you will be redirected to the Developer Distribution \"Listing Overview\" page.`}</p>\n    <InlineAlert slots=\"text\" mdxType=\"InlineAlert\" />\nThis is considered a legacy option with the introduction of the new Developer Distribution portal.\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineAlert","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","slots","isMDXComponent"],"sourceRoot":""}