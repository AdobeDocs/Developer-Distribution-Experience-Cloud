{"version":3,"file":"379b34f3-e65825fa588acae7acea.js","mappings":"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","sources":["webpack://adobe-dev-distribution/./node_modules/@adobe/gatsby-theme-aio/src/components/Search/index.js"],"sourcesContent":["/**\n *  Copyright 2020 Adobe. All rights reserved.\n *  This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License. You may obtain a copy\n *  of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software distributed under\n *  the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n *  OF ANY KIND, either express or implied. See the License for the specific language\n *  governing permissions and limitations under the License.\n */\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { css } from '@emotion/react';\nimport { AnchorLink } from '../AnchorLink';\nimport { Item as MenuItem, Menu } from '../Menu';\nimport { Popover } from '../Popover';\nimport PropTypes from 'prop-types';\nimport { MOBILE_SCREEN_WIDTH, DESKTOP_SCREEN_WIDTH, SIDENAV_WIDTH, SEARCH_PARAMS, isExternalLink } from '../../utils';\nimport { getIndexesFromProduct } from '../../../algolia/helpers/get-products-indexes.js';\nimport classNames from 'classnames';\nimport '@spectrum-css/typography';\nimport '@spectrum-css/textfield';\nimport '@spectrum-css/search';\nimport '@spectrum-css/button';\nimport { ActionButton } from '../ActionButton';\nimport { Close, Magnify } from '../Icons';\nimport { Checkbox } from '../Checkbox';\nimport { ProgressCircle } from '../ProgressCircle';\n\nconst SEARCH_INPUT_WIDTH = '688px';\nconst SEARCH_INDEX_ALL = 'All Products';\nconst SEARCH_KEYWORDS = 'keywords';\nconst SUGGESTION_MAX_RESULTS = 50;\nconst SEARCH_MAX_RESULTS = 100;\n\n// Replace any character in a given unicode range with its html entity equivalent\n// Source: https://stackoverflow.com/a/18750001\nconst encodeHTML = (html) =>\n  html\n    .replace(/[\\u00A0-\\u9999<>\\&]/g, (i) => '&#' + i.charCodeAt(0) + ';')\n    .replace(/&#60;mark&#62;/g, '<mark>')\n    .replace(/&#60;em&#62;/g, '<em>')\n    .replace(/&#60;\\/mark&#62;/g, '</mark>')\n    .replace(/&#60;\\/em&#62;/g, '</em>');\n\n// Used to update the url in the browser\nconst setQueryStringParameter = (name, value) => {\n  const params = new URLSearchParams(window.location.search);\n  params.set(name, value);\n  window.history.replaceState({}, '', `${window.location.pathname}?${params}`);\n};\n\nconst clearQueryStringParameters = () => {\n  window.history.replaceState({}, '', `${window.location.pathname}`);\n};\n\nconst searchSuggestions = async (algolia, query, searchIndex, indexAll, existingIndices, setExistingIndices) => {\n  const queries = [];\n  let indexes;\n  if (!existingIndices.length) {\n    const algoliaIndexList = await algolia.listIndices();\n    const filteredIndexes = Object.values(algoliaIndexList.items).map(({ name }) => name).filter(indexName => {\n      return Object.values(indexAll).includes(indexName);\n    });\n    setExistingIndices(filteredIndexes);\n    indexes = filteredIndexes;\n  } else {\n    indexes = existingIndices;\n  }\n\n  // By default use all indexes\n  if (searchIndex[0] === SEARCH_INDEX_ALL) {\n    searchIndex = indexes;\n  }\n  // Or prioritize searchIndex\n  else {\n    const searchProductNames = searchIndex.filter((product) => product !== SEARCH_INDEX_ALL);\n    const localProductIndexes = getIndexesFromProduct(searchProductNames[0]);\n    searchIndex = [...localProductIndexes, ...indexes.filter((index) => !searchProductNames.includes(index))].filter(index => indexes.includes(index));\n  }\n\n  searchIndex.forEach((indexName) => {\n    queries.push({\n      indexName,\n      query,\n      params: {\n        hitsPerPage: Math.ceil(SUGGESTION_MAX_RESULTS / searchIndex.length),\n        attributesToRetrieve: ['objectID', 'url', 'title', 'description']\n      }\n    });\n  });\n\n  return await algolia.multipleQueries(queries);\n};\n\nconst searchIndexes = async (algolia, query, selectedIndex, indexAll, existingIndices, setExistingIndices, keywords) => {\n\n  let indexes;\n  if (!existingIndices.length) {\n    const algoliaIndexList = await algolia.listIndices();\n    const filteredIndexes = Object.values(algoliaIndexList.items).map(({ name }) => name).filter(indexName => {\n      return Object.values(indexAll).includes(indexName);\n    });\n    setExistingIndices(filteredIndexes);\n    indexes = filteredIndexes;\n  } else {\n    indexes = existingIndices;\n  }\n  if (selectedIndex.includes('all')) {\n    selectedIndex = indexes;\n  } else {\n    selectedIndex = selectedIndex.filter(selected => indexes.includes(selected));\n  }\n\n  const queries = [];\n\n  selectedIndex.forEach((indexName) => {\n    queries.push({\n      indexName,\n      query,\n      params: {\n        facets: [SEARCH_KEYWORDS],\n        attributesToRetrieve: ['objectID', 'url', 'product'],\n        hitsPerPage: Math.ceil(SEARCH_MAX_RESULTS / selectedIndex.length),\n        filters: keywords.map((keyword) => `${SEARCH_KEYWORDS}:\"${keyword}\"`).join(' AND ')\n      }\n    });\n  });\n\n  return await algolia.multipleQueries(queries);\n};\n\nconst mapSearchResults = (hits, results) => {\n  hits.forEach(({ objectID, url, _highlightResult }) => {\n    let urlPath = ''\n    if (url.includes('https://developer.adobe.com')) {\n      urlPath = url.replace('https://developer.adobe.com', '');\n    } else {\n      urlPath = url;\n    }\n    // TODO corrupted record url check\n    if (!isExternalLink(urlPath)) {\n      // Verify url is unique\n      if (!results.find((result) => result.url === urlPath)) {\n        results.push({\n          objectID,\n          url: urlPath,\n          _highlightResult\n        });\n      }\n    }\n  });\n};\n\nconst mapKeywordResults = (facets, results) => {\n  if (facets[SEARCH_KEYWORDS]) {\n    Object.keys(facets[SEARCH_KEYWORDS]).forEach((keyword) => {\n      const found = results.find((result) => Object.keys(result)[0] === keyword);\n      if (found) {\n        // Increase keyword count\n        found[keyword] += facets[SEARCH_KEYWORDS][keyword];\n      } else {\n        results.push({ [keyword]: facets[SEARCH_KEYWORDS][keyword] });\n      }\n    });\n  }\n};\n\nconst setTargetOrigin = () => {\n  const parentURL = document.referrer;\n\n  if (parentURL.indexOf('localhost') >= 0 || parentURL.indexOf('developer-stage.adobe') >= 0 || parentURL.indexOf('hlx.page') >= 0 || parentURL.indexOf('hlx.live') >= 0 || parentURL.indexOf('developer.adobe') >= 0) {\n    return parentURL;\n  } else {\n    return false;\n  }\n};\n\nconst Search = ({ algolia, searchIndex, indexAll, showSearch, setShowSearch, searchButtonId, isIFramed }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [oldSearchQuery, setOldSearchQuery] = useState('')\n  const [selectedIndex, setSelectedIndex] = useState(['all']);\n  const [existingIndices, setExistingIndices] = useState([]);\n  const [selectedKeywords, setSelectedKeywords] = useState([]);\n  const [showSearchResults, setShowSearchResults] = useState(false);\n  const [isFocused, setIsFocused] = useState(false);\n  const [showClear, setShowClear] = useState(false);\n  const searchRef = useRef(null);\n  const suggestionsRef = useRef(null);\n  const inputRef = useRef(null);\n  const searchResultsRef = useRef(null);\n  const [searchSuggestionResults, setSearchSuggestionResults] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n  const [productResults, setProductResults] = useState([]);\n  const [keywordResults, setKeywordResults] = useState([]);\n  const [isSuggestionsOpen, setIsSuggestionsOpen] = useState(false);\n  const [triggerSearch, setTriggerSearch] = useState(false);\n\n  const search = async () => {\n    if (searchQuery.length) {\n      let search;\n      setIsSuggestionsOpen(false);\n      setQueryStringParameter(SEARCH_PARAMS.query, searchQuery);\n      setQueryStringParameter(SEARCH_PARAMS.keywords, selectedKeywords);\n      setQueryStringParameter(SEARCH_PARAMS.index, selectedIndex);\n\n      if (isIFramed) {\n        const message = JSON.stringify({ 'query': searchQuery, 'keywords': selectedKeywords, 'index': selectedIndex });\n        const targetOrigin = setTargetOrigin();\n        if (targetOrigin) {\n          parent.postMessage(message, targetOrigin);\n        }\n      }\n\n      setShowSearchResults(true);\n\n      if (searchQuery !== oldSearchQuery) {\n        setIsLoading(true);\n        search = await searchIndexes(algolia, searchQuery, ['all'], indexAll, existingIndices, setExistingIndices, selectedKeywords);\n      } else {\n        search = await searchIndexes(algolia, searchQuery, selectedIndex, indexAll, existingIndices, setExistingIndices, selectedKeywords);\n      }\n\n      const localProduct = searchIndex.filter((product) => product !== SEARCH_INDEX_ALL)[0];\n\n      const mappedProductResults = [SEARCH_INDEX_ALL];\n      const mappedSearchResults = [];\n      const mappedKeywordResults = [];\n\n      if (search?.results?.length) {\n        search.results.forEach(({ hits, facets }) => {\n          if (facets === undefined) return;\n          if (hits.length > 0) {\n            const product = hits[0].product;\n\n            if (product) {\n              if (!mappedProductResults.includes(product)) {\n                if (product !== localProduct) {\n                  mappedProductResults.push(product);\n                } else {\n                  mappedProductResults.splice(1, 0, localProduct);\n                }\n              }\n            }\n          }\n\n          mapSearchResults(hits, mappedSearchResults);\n          mapKeywordResults(facets, mappedKeywordResults);\n\n          return true;\n        });\n      }\n      if (searchQuery !== oldSearchQuery) {\n        setProductResults(mappedProductResults);\n        setOldSearchQuery(searchQuery);\n        if (localProduct && mappedProductResults.includes(localProduct)) {\n          setSelectedIndex(getIndexesFromProduct(localProduct));\n          setTriggerSearch(true);\n        } else {\n          setSearchResults(mappedSearchResults);\n          setKeywordResults(mappedKeywordResults);\n          setIsLoading(false);\n        }\n      } else {\n        setSearchResults(mappedSearchResults);\n        setKeywordResults(mappedKeywordResults);\n        setIsLoading(false);\n      }\n    }\n  };\n\n  useEffect(async () => {\n    const algoliaIndexList = await algolia.listIndices();\n    const indexes = Object.values(algoliaIndexList.items).map(({ name }) => name).filter(indexName => {\n      return Object.values(indexAll).includes(indexName);\n    });\n    setExistingIndices(indexes);\n  }, [])\n\n  useEffect(() => {\n    if (showSearch) {\n      // Read search params\n      const searchParams = new URL(window.location).searchParams;\n      const query = searchParams.get(SEARCH_PARAMS.query);\n      const keywords = searchParams.get(SEARCH_PARAMS.keywords);\n      const index = searchParams.get(SEARCH_PARAMS.index);\n\n      if (index) {\n        setSelectedIndex(index.split(','));\n      }\n\n      if (keywords) {\n        setSelectedKeywords(keywords.split(','));\n      }\n\n      if (query?.length) {\n        setSearchQuery(query);\n        setShowClear(true);\n\n        setTriggerSearch(true);\n      }\n\n      // Autofocus\n      if (inputRef?.current) {\n        inputRef.current.focus();\n      }\n    } else {\n      clearQueryStringParameters();\n    }\n  }, [showSearch]);\n\n  useEffect(() => {\n    if (triggerSearch) {\n      setTriggerSearch(false);\n      search();\n    }\n  }, [triggerSearch]);\n\n  useEffect(() => {\n    if (searchResultsRef?.current) {\n      searchResultsRef.current.scrollTop = 0;\n    }\n  }, [searchResults]);\n\n  useEffect(() => {\n    const onClick = ({ target }) => {\n      setIsSuggestionsOpen(false);\n\n      if (searchRef.current && !searchRef.current.contains(target) && target.id !== searchButtonId) {\n        setShowSearch(false);\n      }\n    };\n\n    document.addEventListener('click', onClick, true);\n    return () => {\n      document.removeEventListener('click', onClick, true);\n    };\n  }, [setIsSuggestionsOpen, showSearchResults, setShowSearch, searchRef]);\n\n  useEffect(() => {\n    const onEscape = ({ key }) => {\n      if (key === 'Escape') {\n        setShowSearch(false);\n        clearQueryStringParameters();\n      }\n    };\n\n    document.addEventListener('keydown', onEscape);\n    return () => {\n      document.removeEventListener('keydown', onEscape);\n    };\n  }, [setShowSearch]);\n\n  if (isIFramed) {\n    useEffect(() => {\n      if (suggestionsRef) {\n        if (searchSuggestionResults.length > 0) {\n          suggestionsRef.current.querySelectorAll(\"a\").forEach(link => {\n            link.target = \"_top\";\n          });\n        }\n      }\n    }, [searchSuggestionResults])\n\n    useEffect(() => {\n      if (searchResultsRef) {\n        if (searchResults.length > 0) {\n          searchResultsRef.current.querySelectorAll(\"a\").forEach(link => {\n            link.target = \"_top\";\n          });\n        }\n      }\n    }, [searchResults])\n  }\n\n  return (\n    <>\n      <div\n        ref={searchRef}\n        css={css`\n          position: fixed;\n          top: ${isIFramed ? \"0\" : \"var(--spectrum-global-dimension-size-800)\"};\n          left: 0;\n          right: 0;\n          ${showSearchResults && 'bottom: 0;'}\n          background-color: var(--spectrum-global-color-static-white);\n          z-index: 10;\n\n          @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n            top: var(--spectrum-global-dimension-size-1200);\n          }\n        `}>\n        <div\n          css={css`\n            position: relative;\n            margin: var(--spectrum-global-dimension-size-400) auto;\n            max-width: ${SEARCH_INPUT_WIDTH};\n\n            @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n              max-width: calc(100vw - var(--spectrum-global-dimension-size-800));\n            }\n          `}>\n          <form\n            css={css`\n              width: 100%;\n            `}\n            className=\"spectrum-Search\"\n            onSubmit={async (event) => {\n              event.preventDefault();\n              setSelectedKeywords([]);\n              setShowClear(true);\n              setTriggerSearch(true);\n            }}>\n            <div\n              className={classNames('spectrum-Textfield', { 'is-focused': isFocused })}\n              css={css`\n                min-width: auto;\n                width: 100%;\n              `}>\n              <Magnify className=\"spectrum-Textfield-icon\" />\n              <input\n                ref={inputRef}\n                value={searchQuery}\n                onFocus={() => {\n                  setIsFocused(true);\n                }}\n                onBlur={() => {\n                  setIsFocused(false);\n                }}\n                onKeyDown={({ key }) => {\n                  if (suggestionsRef?.current) {\n                    if (key === 'ArrowDown') {\n                      suggestionsRef.current.querySelector('[tabindex=\"0\"]').focus();\n                    } else if (key === 'ArrowUp') {\n                      suggestionsRef.current.querySelector('[tabindex=\"0\"]:last-of-type').focus();\n                    }\n                  }\n                }}\n                onChange={async (e) => {\n                  const query = e.target.value;\n                  setSearchQuery(query);\n\n                  if (query.length && !searchResults.length) {\n                    setShowClear(true);\n\n                    const suggestions = await searchSuggestions(algolia, query, searchIndex, indexAll, existingIndices, setExistingIndices);\n\n                    if (suggestions?.results?.length) {\n                      const results = [];\n                      suggestions.results.forEach(({ hits }) => {\n                        mapSearchResults(hits, results);\n                      });\n                      setSearchSuggestionResults(results);\n\n                      if (!searchResults.length) {\n                        setShowSearchResults(false);\n                      }\n                    } else {\n                      setSearchSuggestionResults([]);\n                    }\n\n                    setIsSuggestionsOpen(true);\n                  } else {\n                    setShowClear(false);\n                    setIsSuggestionsOpen(false);\n                  }\n                }}\n                aria-label=\"Search\"\n                type=\"search\"\n                placeholder=\"Search\"\n                className=\"spectrum-Textfield-input spectrum-Search-input\"\n                autoComplete=\"off\"\n              />\n            </div>\n            {showClear && (\n              <ActionButton\n                css={css`\n                  position: absolute;\n                  \n                  margin-right: var(--spectrum-global-dimension-size-100);\n\n                  @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                    margin-right: 0;\n                  }\n                `}\n                tabIndex=\"-1\"\n                isQuiet\n                aria-label=\"Clear Search\"\n                type=\"reset\"\n                className=\"spectrum-ClearButton spectrum-Search-clearButton\"\n                onClick={() => {\n                  setSearchQuery('');\n                  setSearchResults([]);\n                  setShowSearchResults(false);\n                  clearQueryStringParameters();\n                  inputRef.current.focus();\n                }}>\n                <Close />\n              </ActionButton>\n            )}\n          </form>\n\n          <Popover\n            isOpen={isSuggestionsOpen}\n            css={css`\n              position: absolute;\n              top: var(--spectrum-global-dimension-size-400);\n              width: ${SEARCH_INPUT_WIDTH};\n\n              @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                max-width: calc(100vw - var(--spectrum-global-dimension-size-800));\n              }\n            `}>\n            {searchSuggestionResults.length > 0 ? (\n              <Menu\n                ref={suggestionsRef}\n                onKeyDown={({ key }) => {\n                  if (suggestionsRef?.current && suggestionsRef.current.contains(document.activeElement)) {\n                    if (key === 'ArrowDown') {\n                      const nextSibling = document.activeElement.nextElementSibling;\n                      if (nextSibling) {\n                        nextSibling.focus();\n                      } else {\n                        suggestionsRef.current.querySelector('[tabindex=\"0\"]').focus();\n                      }\n                    } else if (key === 'ArrowUp') {\n                      const previousSibling = document.activeElement.previousElementSibling;\n                      if (previousSibling) {\n                        previousSibling.focus();\n                      } else {\n                        suggestionsRef.current.querySelector('[tabindex=\"0\"]:last-of-type').focus();\n                      }\n                    }\n                  }\n                }}>\n                {searchSuggestionResults.map((searchSuggestion) => {\n                  const to = `${location.origin}${searchSuggestion.url}`;\n                  const title = searchSuggestion._highlightResult.title?.value ? searchSuggestion._highlightResult.title.value : \"\";\n                  const content = searchSuggestion._highlightResult.content?.value ? searchSuggestion._highlightResult.content.value : \"\";\n\n                  return (\n                    <MenuItem key={searchSuggestion.objectID} href={to}>\n                      <div\n                        css={css`\n                          mark,\n                          em {\n                            background-color: transparent;\n                            color: inherit;\n                            font-weight: inherit;\n                            font-style: inherit;\n                            text-decoration: underline;\n                          }\n                        `}>\n                        <strong\n                          dangerouslySetInnerHTML={{\n                            __html: encodeHTML(title)\n                          }}\n                        />\n\n                        <div\n                          css={css`\n                            font-style: italic;\n                            margin: var(--spectrum-global-dimension-size-50) 0;\n                          `}>\n                          {to}\n                        </div>\n\n                        <div\n                          dangerouslySetInnerHTML={{\n                            __html: encodeHTML(content)\n                          }}\n                        />\n                      </div>\n                    </MenuItem>\n                  );\n                })}\n              </Menu>\n            ) : (\n              <div\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-800);\n                  margin-bottom: var(--spectrum-global-dimension-size-800);\n                `}>\n                <div\n                  css={css`\n                    display: flex;\n                    flex-direction: column;\n                    align-items: center;\n                    justify-content: center;\n                  `}>\n                  <h4\n                    className=\"spectrum-Heading spectrum-Heading--sizeS\"\n                    css={css`\n                      margin-bottom: var(--spectrum-global-dimension-size-100);\n                    `}>\n                    No Results Found\n                  </h4>\n                  <em>Try another search term</em>\n                </div>\n              </div>\n            )}\n          </Popover>\n        </div>\n\n        {isLoading && (<div\n          css={css`\n                width:100%;\n                height:100%;\n                display: grid;\n                place-items: start center;\n              `}>\n          <ProgressCircle size=\"L\" />\n        </div>)}\n\n        {showSearchResults && !isLoading && (\n          <div\n            css={css`\n              display: flex;\n              max-width: ${DESKTOP_SCREEN_WIDTH};\n              margin: auto;\n              height: 100%;\n\n              @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                overflow: auto;\n                flex-wrap: wrap;\n              }\n            `}>\n            <div\n              css={css`\n                display: flex;\n                align-items: flex-start;\n                flex-direction: column;\n                box-sizing: border-box;\n                padding: var(--spectrum-global-dimension-size-200);\n                width: ${SIDENAV_WIDTH};\n              `}>\n              <h4\n                className=\"spectrum-Heading spectrum-Heading--sizeXS\"\n                css={css`\n                  margin-bottom: var(--spectrum-global-dimension-size-100);\n                `}>\n                Filter by Products\n              </h4>\n              <div\n                css={css`\n                    display: flex;\n                    flex-direction: column;\n                    overflow-y: auto;\n                    overflow-x: hidden;\n                    max-height: 30%;\n                    width: ${SIDENAV_WIDTH};\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      margin-bottom: 0;\n                    }\n                  `}>\n                {productResults.map((productName, i) => {\n                  return (\n                    <Checkbox\n                      key={i}\n                      isSelected={productName === SEARCH_INDEX_ALL ?\n                        selectedIndex.includes('all') :\n                        selectedIndex.some(index => {\n                          return getIndexesFromProduct(productName).includes(index);\n                        })\n                      }\n                      value={productName}\n                      onChange={(checked) => {\n                        if (!checked) {\n                          if (productName === 'All Products') {\n                            setSelectedIndex(selectedIndex.filter(index => index !== 'all'));\n                          } else {\n                            setSelectedIndex(selectedIndex.filter(index => !getIndexesFromProduct(productName).includes(index)));\n                          }\n                        } else {\n                          if (productName === 'All Products') {\n                            setSelectedIndex(['all']);\n                          } else {\n                            setSelectedIndex([...selectedIndex.filter(index => index !== 'all'), ...getIndexesFromProduct(productName)]);\n                          }\n                        }\n                        setSelectedKeywords([]);\n                        setTriggerSearch(true);\n                      }}>\n                      <span>{productName}</span>\n                    </Checkbox>\n                  );\n                })}\n              </div>\n              <h4\n                className=\"spectrum-Heading spectrum-Heading--sizeXS\"\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-200);\n                  margin-bottom: var(--spectrum-global-dimension-size-100);\n                `}>\n                Filter by Keywords\n              </h4>\n              <div\n                css={css`\n                    margin-bottom: var(--spectrum-global-dimension-size-100);\n                    display: flex;\n                    flex-direction: column;\n                    overflow-y: auto;\n                    overflow-x: hidden;\n                    max-height: 50%;\n                    width: ${SIDENAV_WIDTH};\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      margin-bottom: 0;\n                    }\n                  `}>\n                {keywordResults.length > 0 ?\n                  (keywordResults.map((keywordResult, i) => {\n                    const keyword = Object.keys(keywordResult)[0];\n\n                    return (\n                      <Checkbox\n                        key={i}\n                        isSelected={selectedKeywords.includes(keyword)}\n                        value={keyword}\n                        onChange={(checked) => {\n                          if (checked) {\n                            setSelectedKeywords((selectedKeywords) => [...selectedKeywords, keyword]);\n                          } else {\n                            setSelectedKeywords(\n                              selectedKeywords.filter((selectedKeyword) => selectedKeyword !== keyword)\n                            );\n                          }\n                          setTriggerSearch(true);\n                        }}>\n                        <span\n                          css={css`\n                        white-space: nowrap;\n                        text-overflow: ellipsis;\n                        `}>{keyword}</span>\n                        {/* will enable once this makes sense currently confuses user to think it's # of results */}\n                        {/* <em>&nbsp;({keywordResult[keyword]})</em> */}\n                      </Checkbox>\n                    );\n                  }))\n                  :\n                  (<div className=\"spectrum-Body spectrum-Body--sizeS\">No filter options available</div>)}\n              </div>\n            </div>\n            <div\n              css={css`\n                height: 100%;\n              `}>\n              {searchResults.length > 0 ? (\n                <div\n                  ref={searchResultsRef}\n                  css={css`\n                    height: calc(\n                      100% - var(--spectrum-global-dimension-size-800) - var(--spectrum-global-dimension-size-800) -\n                        var(--spectrum-global-dimension-size-200)\n                    );\n                    overflow: auto;\n\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      height: auto;\n                      overflow: inherit;\n                    }\n                  `}>\n                  {searchResults.map((searchResult) => {\n                    const to = `${location.origin}${searchResult.url}`;\n                    const title = searchResult._highlightResult.title?.value ? searchResult._highlightResult.title.value : \"\";\n                    const content = searchResult._highlightResult.content?.value ? searchResult._highlightResult.content.value : \"\";\n\n                    return (\n                      <div\n                        css={css`\n                          margin: var(--spectrum-global-dimension-size-300);\n\n                          mark,\n                          em {\n                            background-color: transparent;\n                            color: inherit;\n                            font-weight: 700;\n                            font-style: inherit;\n                          }\n                        `}>\n                        <div\n                          className=\"spectrum-Body spectrum-Body--sizeM\"\n                          css={css`\n                            margin-bottom: var(--spectrum-global-dimension-size-100);\n                          `}>\n                          <AnchorLink to={to}>\n                            <span\n                              dangerouslySetInnerHTML={{\n                                __html: encodeHTML(title)\n                              }}\n                            />\n                          </AnchorLink>\n                        </div>\n                        <div\n                          css={css`\n                            font-style: italic;\n                          `}>\n                          <AnchorLink variant=\"secondary\" to={to}>\n                            {to}\n                          </AnchorLink>\n                        </div>\n                        <div\n                          className=\"spectrum-Body spectrum-Body--sizeS\"\n                          css={css`\n                            margin: var(--spectrum-global-dimension-size-100) 0;\n                          `}\n                          dangerouslySetInnerHTML={{ __html: encodeHTML(content) }}\n                        />\n                      </div>\n                    );\n                  })}\n                </div>\n              ) : (\n                <div\n                  css={css`\n                    position: absolute;\n                    top: var(--spectrum-global-dimension-size-3600);\n                    height: calc(2 * var(--spectrum-global-dimension-size-1250));\n                    margin-top: calc(-1 * var(--spectrum-global-dimension-size-1250));\n                    text-align: center;\n                    right: 0;\n                    left: 0;\n                    padding: 0 var(--spectrum-global-dimension-size-200);\n\n                    @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n                      position: static;\n                      margin: var(--spectrum-global-dimension-size-800) 0;\n                      height: auto;\n                    }\n                  `}>\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 104 90\"\n                    css={css`\n                      width: var(--spectrum-global-dimension-size-2400);\n                      height: var(--spectrum-global-dimension-size-1200);\n                      margin-bottom: var(--spectrum-global-dimension-size-300);\n                      fill: var(--spectrum-global-color-static-gray-500);\n                    `}>\n                    <g>\n                      <g>\n                        <path d=\"M37.5,69A24.54,24.54,0,1,0,17,57.92l0,0L1.46,73.52A5,5,0,0,0,5,82.05H5a5,5,0,0,0,3.54-1.47L24.06,65l0,0A24.33,24.33,0,0,0,37.5,69Zm0-46A21.5,21.5,0,1,1,16,44.5,21.52,21.52,0,0,1,37.5,23ZM6.41,78.46A2,2,0,0,1,5,79.05H5a2,2,0,0,1-1.42-3.42L18.83,60.34a25.21,25.21,0,0,0,2.83,2.83Z\"></path>\n                        <path d=\"M28.67,53.33a1.51,1.51,0,0,0,1.06.44,1.49,1.49,0,0,0,1.06-.44l6.71-6.71,6.71,6.71a1.5,1.5,0,0,0,2.12,0,1.49,1.49,0,0,0,0-2.12L39.62,44.5l6.71-6.71a1.49,1.49,0,0,0,0-2.12,1.51,1.51,0,0,0-2.12,0L37.5,42.38l-6.71-6.71a1.5,1.5,0,0,0-2.12,2.12l6.71,6.71-6.71,6.71A1.51,1.51,0,0,0,28.67,53.33Z\"></path>\n                        <path d=\"M102.5,31a1.5,1.5,0,0,0-1.5,1.5V86.17a.83.83,0,0,1-.83.83H38.83a.83.83,0,0,1-.83-.83V73.5a1.5,1.5,0,0,0-3,0V86.17A3.84,3.84,0,0,0,38.83,90h61.34A3.84,3.84,0,0,0,104,86.17V32.5A1.5,1.5,0,0,0,102.5,31Z\"></path>\n                        <path d=\"M37.5,17A1.5,1.5,0,0,0,39,15.5V3.83A.83.83,0,0,1,39.83,3H75V26.5A1.5,1.5,0,0,0,76.5,28h25.55a1.5,1.5,0,0,0,1-2.57L77.55.43a1.43,1.43,0,0,0-.49-.32A1.41,1.41,0,0,0,76.52,0H39.83A3.84,3.84,0,0,0,36,3.83V15.5A1.5,1.5,0,0,0,37.5,17ZM78,5.07,98.37,25H78Z\"></path>\n                      </g>\n                    </g>\n                  </svg>\n                  <h3 className=\"spectrum-Heading spectrum-Heading--light spectrum-Heading--sizeM\">\n                    Sorry, we couldn't find any results for <strong>{searchQuery}</strong>\n                  </h3>\n                  <p\n                    className=\"spectrum-Body spectrum-Body--S\"\n                    css={css`\n                      margin-top: var(--spectrum-global-dimension-size-100);\n                    `}>\n                    Make sure all the words are spelled correctly or try to refine your keywords.\n                  </p>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {\n        !showSearchResults && (\n          <div\n            css={css`\n            position: fixed;\n            z-index: 1;\n            top: ${isIFramed ? \"var(--spectrum-global-dimension-size-800)\" : \"calc(var(--spectrum-global-dimension-size-1200) + var(--spectrum-global-dimension-size-800))\"};\n            bottom: 0;\n            left: 0;\n            right: 0;\n            background-color: rgba(0, 0, 0, 0.4);\n            pointer-events: none;\n          `}\n          />\n        )\n      }\n    </>\n  );\n};\n\nSearch.propTypes = {\n  algolia: PropTypes.object,\n  searchIndex: PropTypes.array,\n  indexAll: PropTypes.object,\n  showSearch: PropTypes.bool,\n  setShowSearch: PropTypes.func,\n  searchButtonId: PropTypes.string\n};\n\nexport { Search };\n"],"names":["SEARCH_INPUT_WIDTH","SEARCH_INDEX_ALL","SEARCH_KEYWORDS","encodeHTML","html","replace","i","charCodeAt","setQueryStringParameter","name","value","params","URLSearchParams","window","location","search","set","history","replaceState","pathname","clearQueryStringParameters","searchSuggestions","_ref19","_asyncToGenerator","_regeneratorRuntime","_callee","algolia","query","searchIndex","indexAll","existingIndices","setExistingIndices","queries","indexes","algoliaIndexList","filteredIndexes","searchProductNames","localProductIndexes","_context","prev","next","length","listIndices","sent","Object","values","items","map","_ref20","filter","indexName","includes","product","getIndexesFromProduct","concat","_toConsumableArray","index","forEach","push","hitsPerPage","Math","ceil","attributesToRetrieve","multipleQueries","abrupt","stop","_x","_x2","_x3","_x4","_x5","_x6","apply","arguments","searchIndexes","_ref21","_callee2","selectedIndex","keywords","_context2","_ref22","selected","facets","filters","keyword","join","_x7","_x8","_x9","_x10","_x11","_x12","_x13","mapSearchResults","hits","results","_ref23","objectID","url","_highlightResult","urlPath","isExternalLink","find","result","mapKeywordResults","keys","_results$push","found","_ref","styles","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","Search","_ref24","showSearch","setShowSearch","searchButtonId","isIFramed","_useState","useState","isLoading","setIsLoading","_useState2","searchQuery","setSearchQuery","_useState3","oldSearchQuery","setOldSearchQuery","_useState4","setSelectedIndex","_useState5","_useState6","selectedKeywords","setSelectedKeywords","_useState7","showSearchResults","setShowSearchResults","_useState8","isFocused","setIsFocused","_useState9","showClear","setShowClear","searchRef","useRef","suggestionsRef","inputRef","searchResultsRef","_useState10","searchSuggestionResults","setSearchSuggestionResults","_useState11","searchResults","setSearchResults","_useState12","productResults","setProductResults","_useState13","keywordResults","setKeywordResults","_useState14","isSuggestionsOpen","setIsSuggestionsOpen","_useState15","triggerSearch","setTriggerSearch","_ref25","_callee3","_search2","_search2$results","_search","message","targetOrigin","localProduct","mappedProductResults","mappedSearchResults","mappedKeywordResults","_context3","SEARCH_PARAMS","JSON","stringify","parentURL","document","referrer","indexOf","parent","postMessage","_ref26","undefined","splice","useEffect","_callee4","_context4","_ref28","searchParams","URL","get","split","current","focus","scrollTop","onClick","_ref29","target","contains","id","addEventListener","removeEventListener","onEscape","_ref30","key","querySelectorAll","link","___EmotionJSX","React","ref","css","MOBILE_SCREEN_WIDTH","className","onSubmit","_ref31","_callee5","event","_context5","preventDefault","_x14","classNames","Magnify","onFocus","onBlur","onKeyDown","_ref32","querySelector","onChange","_ref33","_callee6","e","_suggestions$results","suggestions","_context6","_ref34","_x15","type","placeholder","autoComplete","ActionButton","tabIndex","isQuiet","Close","Popover","isOpen","Menu","_ref35","activeElement","nextSibling","nextElementSibling","previousSibling","previousElementSibling","searchSuggestion","_searchSuggestion$_hi","_searchSuggestion$_hi2","to","origin","title","content","MenuItem","href","dangerouslySetInnerHTML","__html","ProgressCircle","size","DESKTOP_SCREEN_WIDTH","SIDENAV_WIDTH","productName","Checkbox","isSelected","some","checked","keywordResult","selectedKeyword","searchResult","_searchResult$_highli","_searchResult$_highli2","AnchorLink","variant","xmlns","viewBox","d"],"sourceRoot":""}