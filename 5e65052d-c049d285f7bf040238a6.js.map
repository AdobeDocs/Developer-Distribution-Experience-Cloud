{"version":3,"file":"5e65052d-c049d285f7bf040238a6.js","mappings":"w/BAmCA,IAAMA,EAAkB,SAACC,GAAW,IAADC,EACjC,MAA8B,SAA1BD,SAAY,QAAPC,EAALD,EAAOE,aAAK,IAAAD,OAAP,EAALA,EAAcE,UACTC,EAAAA,EAAAA,cAAaJ,EAAO,CACzBK,QAAS,UAINL,CACT,EAAEM,EAAA,CAAAC,KAAA,SAAAC,OAAA,6EAEIC,EAAc,SAAHC,GAAA,IAAMC,EAAOD,EAAPC,QAAOC,EAAAF,EAAEF,OAAAA,OAAM,IAAAI,EAAG,CAAC,OAAQ,WAAUA,EAAAC,EAAAH,EAAEI,SAAAA,OAAQ,IAAAD,EAAG,CAAC,SAAU,aAAYA,EAAEE,EAASL,EAATK,UAAS,OACzGJ,GACEK,EAAAA,EAAAA,IAAA,OACED,UAAWA,EACXE,IAAGX,GAKFY,EAAAA,SAAAA,IAAaP,EAAQT,MAAMiB,UAAU,SAACC,EAAMC,GAC3C,IAAIC,EAAUR,EAAS,GACnBS,EAAQf,EAAO,GAEfa,EAAI,IACNC,EAAUR,EAAS,GACnBS,EAAQf,EAAO,IAGjB,IAAMgB,GAAOC,EAAAA,EAAAA,IAAgBL,GAE7B,OACEJ,EAAAA,EAAAA,IAAA,OAAKU,IAAKL,IACRL,EAAAA,EAAAA,IAACW,EAAAA,EAAY,CAACC,KAAMJ,EAAKtB,MAAM0B,KAAML,MAAOA,EAAOD,QAASA,IAC1DN,EAAAA,EAAAA,IAAA,QAAMa,MAAM,yBAAyBL,EAAKtB,MAAMiB,WAIxD,KAEA,IAAK,EAELW,EAAY,SAAHC,GAAA,IAAMC,EAAKD,EAALC,MAAOxB,EAAMuB,EAANvB,OAAM,OAChCwB,GACI5B,EAAAA,EAAAA,cAAa4B,EAAO,CAClBb,UAAUc,EAAAA,EAAAA,IAAcD,EAAM9B,MAAMiB,SAAUpB,GAC9CkB,KAAKA,EAAAA,EAAAA,IAAG,8FAOJT,EAAM,yNAiBZ,IAAK,EAAA0B,EAAA,CAAA3B,KAAA,UAAAC,OAAA,6FAEL2B,EAAY,SAAHC,GAAmB,IAAbC,EAAKD,EAALC,MAEnB,OADiBC,OAAOC,KAAKF,GAAOG,QAAO,SAACd,GAAG,OAAKA,EAAIe,WAAW,OAAO,IAC1DC,KAAI,SAACC,GAAO,OAC1BvC,EAAAA,EAAAA,cAAaiC,EAAMM,GAAU,CAC3B5B,UAAW,qCACXE,IAAGiB,GASH,GAEN,EAAEU,EAAA,CAAArC,KAAA,UAAAC,OAAA,sIAEIqC,EAAc,SAAHC,GAAA,IAAMC,EAAOD,EAAPC,QAASzB,EAAOwB,EAAPxB,QAAO,OACrCyB,GACI3C,EAAAA,EAAAA,cAAa2C,EAAS,CACpBhC,UACc,YAAZO,EAAwB,2BAA6B,oDACvDL,IAAG2B,IASL,IAAK,EAAAI,EAAA,CAAAzC,KAAA,UAAAC,OAAA,wDAAAyC,EAAA,CAAA1C,KAAA,SAAAC,OAAA,uVAAA0C,EAAA,CAAA3C,KAAA,UAAAC,OAAA,mDAAA2C,EAAA,CAAA5C,KAAA,UAAAC,OAAA,wDAEL4C,EAAO,SAAHC,GAYH,IAXLtC,EAASsC,EAATtC,UACAuC,EAAUD,EAAVC,WAAUC,EAAAF,EACVG,MAAAA,OAAK,IAAAD,EAAG,OAAMA,EACdR,EAAOM,EAAPN,QACAf,EAAKqB,EAALrB,MACAyB,EAAIJ,EAAJI,KACA9C,EAAO0C,EAAP1C,QAAO+C,EAAAL,EACP/B,QAAAA,OAAO,IAAAoC,EAAG,UAASA,EAAAC,EAAAN,EACnBO,MAAAA,OAAK,IAAAD,EAAGE,EAAAA,GAAoBF,EAAAG,EAAAT,EAC5BU,kBAAAA,OAAiB,IAAAD,GAAQA,EACtB5D,GAAK8D,EAAAA,EAAAA,GAAAX,EAAAY,GAERC,GAAmCC,EAAAA,EAAAA,YAAWC,EAAAA,GAAtCC,EAAYH,EAAZG,aAAcC,EAAQJ,EAARI,SAEtB,IAAKhD,GAAuB,YAAZA,EAAuB,CACrC,IAAQiD,EAAgBF,EAAhBE,KAAMC,EAAUH,EAAVG,MACRC,GAAkBC,EAAAA,EAAAA,IAAQJ,EAASK,UACnCC,GAAmBC,EAAAA,EAAAA,IAAaL,GAChCM,GAAkBC,EAAAA,EAAAA,IAAoBN,EAAiBG,GACvDI,GAAsBC,EAAAA,EAAAA,IAAwBR,EAAiBK,GACrE,GAAgC,kBAArBf,EACT,MAAM,IAAImB,MAAM,6EAGlB,OACElE,EAAAA,EAAAA,IAAA,WACED,UAAWoE,IAAWpE,EAAU,aAAcyC,GAC9CvC,KAAKA,EAAAA,EAAAA,IAAG,gJAIcqC,QAAAA,EAAc,qBAAoB,0DAItBO,EAAAA,GAAoB,kDAIpBuB,EAAAA,GAAmB,4EAIrDpE,EAAAA,EAAAA,IAACc,EAAS,CAACE,MAAOA,EAAOxB,OAAM,yBAC/BQ,EAAAA,EAAAA,IAAA,OACEC,KAAKA,EAAAA,EAAAA,IAAG,oEAKO2C,EAAK,uFASpB5C,EAAAA,EAAAA,IAAA,OACEC,KAAKA,EAAAA,EAAAA,IAAG,8MAW0B4C,EAAAA,GAAoB,2EAKpDE,IAAsC,KAAjBQ,aAAI,EAAJA,EAAMc,UAAmBd,aAAI,EAAJA,EAAMe,SAASf,aAAI,EAAJA,EAAM3C,OAAQkD,IAC3E9D,EAAAA,EAAAA,IAACuE,EAAAA,EAAW,CACVf,MAAO,CACLgB,EAAAA,GACAjB,EAAIkB,EAAAA,EAAA,GACCX,GAAe,IAAElD,MAAM8D,EAAAA,EAAAA,KAAWC,EAAAA,EAAAA,IAAab,EAAgBlD,SACpEoD,GAAmBS,EAAAA,EAAA,GAAST,GAAmB,IAAEpD,MAAM8D,EAAAA,EAAAA,IAAWV,EAAoBpD,YAK5FZ,EAAAA,EAAAA,IAAC6B,EAAW,CAACE,QAASA,EAASzB,QAASA,KAExCN,EAAAA,EAAAA,IAACmB,EAAS,CAACE,MAAOnC,MAK5B,CACE,IAAM0F,EAAS,+FAEf,MAAgB,cAAZtE,GAEAN,EAAAA,EAAAA,IAAA,WACED,UAAWoE,IAAWpE,EAAU,aAAcyC,GAC9CvC,KAAKA,EAAAA,EAAAA,IAAG,uCAGI2E,EAAM,eACFtC,QAAAA,EAAc,uCAAsC,kCAElCuC,EAAAA,GAAmB,kDAInBT,EAAAA,GAAmB,0GAQrDpE,EAAAA,EAAAA,IAACc,EAAS,CAACE,MAAOA,KAElBhB,EAAAA,EAAAA,IAAA,OACEC,KAAKA,EAAAA,EAAAA,IAAG,4SAa0B4E,EAAAA,GAAmB,gEAIrD7E,EAAAA,EAAAA,IAAC6B,EAAW,CAACE,QAASA,EAASzB,QAASA,KAExCN,EAAAA,EAAAA,IAACmB,EAAS,CAACE,MAAOnC,KAElBc,EAAAA,EAAAA,IAACP,EAAW,CACVE,QAASA,EACTG,SAAU,CAAC,YAAa,UACxBN,OAAQ,CAAC,UAAW,QACpBS,IAAGkC,MAOU,cAAZ7B,GAEPN,EAAAA,EAAAA,IAAA,WACED,UAAWoE,IAAWpE,EAAU,sBAChCE,KAAKA,EAAAA,EAAAA,IAAG,cACQqC,QAAAA,EAAc,uCAAsC,sBAExDsC,EAAM,kDAGgBC,EAAAA,GAAmB,gGAMrD7E,EAAAA,EAAAA,IAAA,OACEC,IAAGiC,IAKHlC,EAAAA,EAAAA,IAAA,OACEC,KAAKA,EAAAA,EAAAA,IAAG,kOAQ0B4E,EAAAA,GAAmB,+BAKpDpC,IACCrD,EAAAA,EAAAA,cAAaqD,EAAM,CACjBtC,UAAUc,EAAAA,EAAAA,IAAcwB,EAAKvD,MAAMiB,SAAUpB,GAC7CkB,IAAGgC,KAmBPjC,EAAAA,EAAAA,IAAC6B,EAAW,CAACE,QAASA,EAAS+C,WAAS,KAExC9E,EAAAA,EAAAA,IAACmB,EAAS,CAACE,MAAOnC,KAElBc,EAAAA,EAAAA,IAACP,EAAW,CACVE,QAASA,EACTM,IAAG+B,MAKPhC,EAAAA,EAAAA,IAAA,OACEC,KAAKA,EAAAA,EAAAA,IAAG,wCAG0B4E,EAAAA,GAAmB,yBAIrD7E,EAAAA,EAAAA,IAACc,EAAS,CAACE,MAAOA,YA7ErB,CAoFX,C","sources":["webpack://adobe-dev-distribution/./node_modules/@adobe/gatsby-theme-aio/src/components/Hero/index.js"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React, { Children, cloneElement, useContext } from 'react';\nimport { withPrefix } from 'gatsby';\nimport { css } from '@emotion/react';\nimport { AnchorButton } from '../AnchorButton';\nimport '@spectrum-css/typography';\nimport PropTypes from 'prop-types';\nimport {\n  cleanRootFix,\n  cloneChildren,\n  DEFAULT_HOME,\n  DESKTOP_SCREEN_WIDTH,\n  findSelectedTopPage,\n  findSelectedTopPageMenu,\n  getElementChild,\n  MOBILE_SCREEN_WIDTH,\n  rootFix,\n  rootFixPages,\n  TABLET_SCREEN_WIDTH\n} from '../../utils';\nimport Context from '../Context';\nimport { Breadcrumbs } from '../Breadcrumbs';\nimport classNames from 'classnames';\n\nconst setImageLoading = (child) => {\n  if (child?.props?.mdxType === 'img') {\n    return cloneElement(child, {\n      loading: 'eager'\n    });\n  }\n\n  return child;\n};\n\nconst HeroButtons = ({ buttons, styles = ['fill', 'outline'], variants = ['accent', 'secondary'], className }) =>\n  buttons ? (\n    <div\n      className={className}\n      css={css`\n        display: flex;\n        flex-wrap: wrap;\n        gap: var(--spectrum-global-dimension-size-200);\n      `}>\n      {Children.map(buttons.props.children, (item, i) => {\n        let variant = variants[0];\n        let style = styles[0];\n\n        if (i > 0) {\n          variant = variants[1];\n          style = styles[1];\n        }\n\n        const link = getElementChild(item);\n\n        return (\n          <div key={i}>\n            <AnchorButton href={link.props.href} style={style} variant={variant}>\n              <span class=\"spectrum-Button-label\">{link.props.children}</span>\n            </AnchorButton>\n          </div>\n        );\n      })}\n    </div>\n  ) : null;\n\nconst HeroImage = ({ image, styles }) =>\n  image\n    ? cloneElement(image, {\n        children: cloneChildren(image.props.children, setImageLoading),\n        css: css`\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          height: 100%;\n          width: 100%;\n          margin-top: 0;\n          ${styles}\n\n          .gatsby-resp-image-wrapper {\n            max-width: none !important;\n            width: 100% !important;\n            height: 100% !important;\n          }\n\n          .gatsby-resp-image-background-image {\n            padding-bottom: unset !important;\n          }\n\n          .gatsby-resp-image-image {\n            object-fit: cover;\n          }\n        `\n      })\n    : null;\n\nconst HeroTexts = ({ texts }) => {\n  const textKeys = Object.keys(texts).filter((key) => key.startsWith('text'));\n  return textKeys.map((textKey) =>\n    cloneElement(texts[textKey], {\n      className: 'spectrum-Body spectrum-Body--sizeL',\n      css: css`\n        &.spectrum-Body--sizeL {\n          margin-top: 0 !important;\n\n          &:last-of-type {\n            margin-bottom: 0 !important;\n          }\n        }\n      `\n    })\n  );\n};\n\nconst HeroHeading = ({ heading, variant }) =>\n  heading\n    ? cloneElement(heading, {\n        className:\n          variant === 'default' ? 'spectrum-Heading--sizeXL' : 'spectrum-Heading--sizeXXL spectrum-Heading--serif',\n        css: css`\n          margin-top: 0;\n          margin-bottom: var(--spectrum-global-dimension-size-200);\n\n          & + p {\n            margin-bottom: var(--spectrum-global-dimension-size-200);\n          }\n        `\n      })\n    : null;\n\nconst Hero = ({\n  className,\n  background,\n  theme = 'dark',\n  heading,\n  image,\n  icon,\n  buttons,\n  variant = 'default',\n  width = DESKTOP_SCREEN_WIDTH,\n  hideBreadcrumbNav = false,\n  ...props\n}) => {\n  const { siteMetadata, location } = useContext(Context);\n\n  if (!variant || variant === 'default') {\n    const { home, pages } = siteMetadata;\n    const pathWithRootFix = rootFix(location.pathname);\n    const pagesWithRootFix = rootFixPages(pages);\n    const selectedTopPage = findSelectedTopPage(pathWithRootFix, pagesWithRootFix);\n    const selectedTopPageMenu = findSelectedTopPageMenu(pathWithRootFix, selectedTopPage);\n    if (typeof hideBreadcrumbNav != 'boolean') {\n      throw new Error('hideBreadcrumbNav is not a boolean. Correct use hideBreadcrumbNav={false}');\n    }\n\n    return (\n      <section\n        className={classNames(className, `spectrum--${theme}`)}\n        css={css`\n          position: relative;\n          height: var(--spectrum-global-dimension-size-3400);\n          margin-bottom: var(--spectrum-global-dimension-size-400);\n          background-color: ${background ?? 'rgb( 29, 125, 238)'};\n          width: 100%;\n          display: flex;\n\n          @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n            overflow: auto;\n          }\n\n          @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n            height: calc(100vh - var(--spectrum-global-dimension-size-1200));\n          }\n        `}>\n        <HeroImage image={image} styles={`position: absolute;`} />\n        <div\n          css={css`\n            margin: auto;\n            display: flex;\n            position: relative;\n            height: 100%;\n            max-width: ${width};\n            flex-direction: row;\n            width: 100%;\n            align-items: center;\n\n            & > p {\n              margin-top: 0 !important;\n            }\n          `}>\n          <div\n            css={css`\n              width: calc(5 * 100% / 12);\n              position: absolute;\n              display: flex;\n              flex-direction: column;\n\n              & > p {\n                margin-top: var(--spectrum-global-dimension-size-225) !important;\n                margin-bottom: 0 !important;\n              }\n\n              @media screen and (max-width: ${DESKTOP_SCREEN_WIDTH}) {\n                width: auto;\n                padding: 0 var(--spectrum-global-dimension-size-400);\n              }\n            `}>\n            {!hideBreadcrumbNav && home?.hidden !== true && home?.title && home?.href && selectedTopPage && (\n              <Breadcrumbs\n                pages={[\n                  DEFAULT_HOME,\n                  home,\n                  { ...selectedTopPage, href: withPrefix(cleanRootFix(selectedTopPage.href)) },\n                  selectedTopPageMenu && { ...selectedTopPageMenu, href: withPrefix(selectedTopPageMenu.href) }\n                ]}\n              />\n            )}\n\n            <HeroHeading heading={heading} variant={variant} />\n\n            <HeroTexts texts={props} />\n          </div>\n        </div>\n      </section>\n    );\n  } else {\n    const height = 'calc(var(--spectrum-global-dimension-size-6000) + var(--spectrum-global-dimension-size-250))';\n\n    if (variant === 'fullwidth') {\n      return (\n        <section\n          className={classNames(className, `spectrum--${theme}`)}\n          css={css`\n            position: relative;\n            width: 100%;\n            height: ${height};\n            background: ${background ?? 'var(--spectrum-global-color-gray-50)'};\n\n            @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n              overflow: auto;\n            }\n\n            @media screen and (max-width: ${MOBILE_SCREEN_WIDTH}) {\n              height: 100vh;\n\n              .spectrum-Heading--sizeXXL {\n                font-size: var(--spectrum-alias-heading-xl-text-size);\n              }\n            }\n          `}>\n          <HeroImage image={image} />\n\n          <div\n            css={css`\n              height: 100%;\n              position: absolute;\n              top: 0;\n              width: 100%;\n              box-sizing: border-box;\n              padding: 0 calc(var(--spectrum-global-dimension-size-3600) + var(--spectrum-global-dimension-size-125));\n              display: flex;\n              flex-direction: column;\n              align-items: center;\n              justify-content: center;\n              text-align: center;\n\n              @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                padding: 0 var(--spectrum-global-dimension-size-400);\n              }\n            `}>\n            <HeroHeading heading={heading} variant={variant} />\n\n            <HeroTexts texts={props} />\n\n            <HeroButtons\n              buttons={buttons}\n              variants={['secondary', 'accent']}\n              styles={['outline', 'fill']}\n              css={css`\n                margin-top: var(--spectrum-global-dimension-size-400);\n              `}\n            />\n          </div>\n        </section>\n      );\n    } else if (variant === 'halfwidth') {\n      return (\n        <section\n          className={classNames(className, `spectrum--lightest`)}\n          css={css`\n            background: ${background ?? 'var(--spectrum-global-color-gray-50)'};\n            width: 100%;\n            height: ${height};\n            overflow: hidden;\n\n            @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n              height: auto;\n              padding: var(--spectrum-global-dimension-size-400);\n              box-sizing: border-box;\n            }\n          `}>\n          <div\n            css={css`\n              display: flex;\n              height: 100%;\n              justify-content: center;\n            `}>\n            <div\n              css={css`\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                width: calc(5 * 100% / 12);\n                margin-left: var(--spectrum-global-dimension-size-800);\n                margin-right: var(--spectrum-global-dimension-size-400);\n\n                @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                  width: 100%;\n                  margin: 0;\n                }\n              `}>\n              {icon &&\n                cloneElement(icon, {\n                  children: cloneChildren(icon.props.children, setImageLoading),\n                  css: css`\n                    height: var(--spectrum-global-dimension-size-600);\n                    width: var(--spectrum-global-dimension-size-600);\n                    margin-top: 0 !important;\n                    margin-bottom: var(--spectrum-global-dimension-size-300) !important;\n\n                    .gatsby-resp-image-wrapper {\n                      max-width: none !important;\n                      width: 100% !important;\n                      height: 100% !important;\n                    }\n\n                    .gatsby-resp-image-image {\n                      height: 100%;\n                      object-fit: contain;\n                    }\n                  `\n                })}\n\n              <HeroHeading heading={heading} isVariant />\n\n              <HeroTexts texts={props} />\n\n              <HeroButtons\n                buttons={buttons}\n                css={css`\n                  margin-top: var(--spectrum-global-dimension-size-400);\n                `}\n              />\n            </div>\n            <div\n              css={css`\n                flex: 1;\n\n                @media screen and (max-width: ${TABLET_SCREEN_WIDTH}) {\n                  display: none;\n                }\n              `}>\n              <HeroImage image={image} />\n            </div>\n          </div>\n        </section>\n      );\n    }\n  }\n};\n\nHero.propTypes = {\n  background: PropTypes.string,\n  heading: PropTypes.element,\n  text: PropTypes.element,\n  image: PropTypes.element,\n  icon: PropTypes.element,\n  buttons: PropTypes.element,\n  variant: PropTypes.string,\n  width: PropTypes.string,\n  theme: PropTypes.string,\n  showBreadcrumbNav: PropTypes.bool\n};\n\nHeroButtons.propTypes = {\n  buttons: PropTypes.element,\n  variants: PropTypes.array,\n  styles: PropTypes.array\n};\n\nHeroImage.propTypes = {\n  image: PropTypes.element\n};\n\nexport { Hero, HeroImage, HeroButtons };\n"],"names":["setImageLoading","child","_child$props","props","mdxType","cloneElement","loading","_ref7","name","styles","HeroButtons","_ref8","buttons","_ref8$styles","_ref8$variants","variants","className","___EmotionJSX","css","Children","children","item","i","variant","style","link","getElementChild","key","AnchorButton","href","class","HeroImage","_ref9","image","cloneChildren","_ref6","HeroTexts","_ref10","texts","Object","keys","filter","startsWith","map","textKey","_ref5","HeroHeading","_ref11","heading","_ref","_ref2","_ref3","_ref4","Hero","_ref12","background","_ref12$theme","theme","icon","_ref12$variant","_ref12$width","width","DESKTOP_SCREEN_WIDTH","_ref12$hideBreadcrumb","hideBreadcrumbNav","_objectWithoutPropertiesLoose","_excluded","_useContext","useContext","Context","siteMetadata","location","home","pages","pathWithRootFix","rootFix","pathname","pagesWithRootFix","rootFixPages","selectedTopPage","findSelectedTopPage","selectedTopPageMenu","findSelectedTopPageMenu","Error","classNames","MOBILE_SCREEN_WIDTH","hidden","title","Breadcrumbs","DEFAULT_HOME","_objectSpread","withPrefix","cleanRootFix","height","TABLET_SCREEN_WIDTH","isVariant"],"sourceRoot":""}